[[ -f "/usr/libexec/path_helpers" ]] && eval "$(/usr/libexec/path_helper)"
export PATH=$HOME/bin:$HOME/.local/bin:$PATH

PS1='%B%F{226}%~%f -> %b'

CURRENT_OS=$(uname -s)

if [[ -f /etc/manpaths ]]; then
    for dir in $(cat /etc/manpaths); do
	export MANPATH="$MANPATH:$dir"
    done
fi
export MANPATH="/usr/local/man:$MANPATH"

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
export EDITOR="emacs"
export ALTERNATE_EDITOR="code"
export GOPATH="$HOME/Development/gocode"
export JAVA_OPTIONS="-Djava.awt.headless=true"
export ANDROID_SDK_ROOT="/usr/local/share/android-sdk"
export ANDROID_NDK_ROOT="/usr/local/share/android-ndk"
export NVM_DIR="$HOME/.nvm"

alias mkdir="mkdir -p"
alias cm=chezmoi

alias pip-up="pip freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs pip install -U"
alias git-scrub="git branch --merged | grep -v master | xargs git branch -d"
export NVM_DIR="$HOME/.nvm"
[[ -s "$NVM_DIR/nvm.sh" ]] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[[ -s "$NVM_DIR/bash_completion" ]] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# init pyenv
if [[ -d $HOME/.pyenv ]]; then
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"

    if [[ -d "$(pyenv root)/plugins/pyenv-virtualenv" ]]; then
	eval "$(pyenv virtualenv-init -)"
    fi
fi

# init pipx
# eval "$(register-python-argcomplete pipx)"

if [[ $CURRENT_OS = "Darwin" ]]; then
   export HOMEBREW_CASK_OPTS="--appdir=/Applications"
fi
alias brew-up="brew update && brew upgrade"
alias cask="brew cask"